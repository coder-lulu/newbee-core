syntax = "proto3";

// Tenant message

message TenantInfo {
  optional uint64 id = 1;
  optional int64 created_at = 2;
  optional int64 updated_at = 3;
  optional uint32 status = 4;
  optional string name = 5;
  optional string code = 6;
  optional string description = 7;
  optional int64 expired_at = 8;
  optional string config = 9;
  optional uint64 created_by = 10;
}

message PublicTenantInfo {
  string tenant_id = 1;
  string company_name = 2;
  optional string domain = 3;
}

message PublicTenantListResp {
  bool tenant_enabled = 1;
  repeated PublicTenantInfo vo_list = 2;
}

message TenantListResp {
  uint64 total = 1;
  repeated TenantInfo data = 2;
}

message TenantListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  optional string name = 3;
  optional string code = 4;
  optional uint32 status = 5;
  optional uint64 created_by = 6;
}

message TenantCodeReq {
  string code = 1;
}

message TenantInitReq {
  uint64 tenant_id = 1;
  optional string admin_username = 2;
  optional string admin_password = 3;
  optional string admin_email = 4;
}

message TenantStatusReq {
  uint64 id = 1;
  uint32 status = 2;
}

service Core {
  // Tenant management
  // group: tenant
  rpc createTenant (TenantInfo) returns (BaseIDResp);
  // group: tenant
  rpc updateTenant (TenantInfo) returns (BaseResp);
  // group: tenant
  rpc getTenantList (TenantListReq) returns (TenantListResp);
  // group: tenant
  rpc getTenantById (IDReq) returns (TenantInfo);
  // group: tenant
  rpc getTenantByCode (TenantCodeReq) returns (TenantInfo);
  // group: tenant
  rpc deleteTenant (IDsReq) returns (BaseResp);
  // group: tenant
  rpc updateTenantStatus (TenantStatusReq) returns (BaseResp);
  // group: tenant
  rpc initTenant (TenantInitReq) returns (BaseResp);
  // group: public
  rpc getPublicTenantList (Empty) returns (PublicTenantListResp);
}