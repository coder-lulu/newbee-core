// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SysApisColumns holds the columns for the "sys_apis" table.
	SysApisColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "tenant_id", Type: field.TypeUint64, Comment: "Tenant ID | 租户 ID", Default: 1},
		{Name: "path", Type: field.TypeString, Comment: "API path | API 路径"},
		{Name: "description", Type: field.TypeString, Comment: "API description | API 描述"},
		{Name: "api_group", Type: field.TypeString, Comment: "API group | API 分组"},
		{Name: "service_name", Type: field.TypeString, Comment: "Service name | 服务名称", Default: "Other"},
		{Name: "method", Type: field.TypeString, Comment: "HTTP method | HTTP 请求类型", Default: "POST"},
		{Name: "is_required", Type: field.TypeBool, Comment: "Whether is required | 是否必选", Default: false},
	}
	// SysApisTable holds the schema information for the "sys_apis" table.
	SysApisTable = &schema.Table{
		Name:       "sys_apis",
		Comment:    "API Table | API接口表",
		Columns:    SysApisColumns,
		PrimaryKey: []*schema.Column{SysApisColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "api_path_method",
				Unique:  true,
				Columns: []*schema.Column{SysApisColumns[4], SysApisColumns[8]},
			},
		},
	}
	// SysAuditLogsColumns holds the columns for the "sys_audit_logs" table.
	SysAuditLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Comment: "UUID"},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "tenant_id", Type: field.TypeString, Comment: "Tenant ID | 租户ID"},
		{Name: "user_id", Type: field.TypeString, Comment: "User ID who performed the operation | 执行操作的用户ID"},
		{Name: "user_name", Type: field.TypeString, Nullable: true, Comment: "User name who performed the operation | 执行操作的用户名"},
		{Name: "operation_type", Type: field.TypeEnum, Comment: "Operation type | 操作类型", Enums: []string{"CREATE", "READ", "UPDATE", "DELETE"}},
		{Name: "resource_type", Type: field.TypeString, Comment: "Resource type that was operated on | 被操作的资源类型"},
		{Name: "resource_id", Type: field.TypeString, Nullable: true, Comment: "Resource ID that was operated on | 被操作的资源ID"},
		{Name: "request_method", Type: field.TypeString, Comment: "HTTP request method | HTTP请求方法"},
		{Name: "request_path", Type: field.TypeString, Comment: "HTTP request path | HTTP请求路径"},
		{Name: "request_data", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Request data (JSON format, sensitive data filtered) | 请求数据(JSON格式，已过滤敏感数据)", SchemaType: map[string]string{"mysql": "TEXT"}},
		{Name: "response_status", Type: field.TypeInt, Comment: "HTTP response status code | HTTP响应状态码"},
		{Name: "response_data", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Response data (JSON format, optional) | 响应数据(JSON格式，可选)", SchemaType: map[string]string{"mysql": "TEXT"}},
		{Name: "ip_address", Type: field.TypeString, Comment: "Client IP address | 客户端IP地址"},
		{Name: "user_agent", Type: field.TypeString, Nullable: true, Comment: "User agent string | 用户代理字符串", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "duration_ms", Type: field.TypeInt64, Comment: "Request processing duration in milliseconds | 请求处理耗时(毫秒)", Default: 0},
		{Name: "error_message", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Error message if operation failed | 操作失败时的错误信息"},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true, Comment: "Additional metadata in JSON format | 额外的元数据(JSON格式)"},
	}
	// SysAuditLogsTable holds the schema information for the "sys_audit_logs" table.
	SysAuditLogsTable = &schema.Table{
		Name:       "sys_audit_logs",
		Comment:    "Audit Log Table | 审计日志表",
		Columns:    SysAuditLogsColumns,
		PrimaryKey: []*schema.Column{SysAuditLogsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "auditlog_tenant_id_user_id_created_at",
				Unique:  false,
				Columns: []*schema.Column{SysAuditLogsColumns[4], SysAuditLogsColumns[5], SysAuditLogsColumns[1]},
				Annotation: &entsql.IndexAnnotation{
					DescColumns: map[string]bool{
						SysAuditLogsColumns[1].Name: true,
					},
				},
			},
			{
				Name:    "auditlog_tenant_id_operation_type_created_at",
				Unique:  false,
				Columns: []*schema.Column{SysAuditLogsColumns[4], SysAuditLogsColumns[7], SysAuditLogsColumns[1]},
				Annotation: &entsql.IndexAnnotation{
					DescColumns: map[string]bool{
						SysAuditLogsColumns[1].Name: true,
					},
				},
			},
			{
				Name:    "auditlog_tenant_id_resource_type_created_at",
				Unique:  false,
				Columns: []*schema.Column{SysAuditLogsColumns[4], SysAuditLogsColumns[8], SysAuditLogsColumns[1]},
				Annotation: &entsql.IndexAnnotation{
					DescColumns: map[string]bool{
						SysAuditLogsColumns[1].Name: true,
					},
				},
			},
			{
				Name:    "auditlog_tenant_id_resource_type_resource_id",
				Unique:  false,
				Columns: []*schema.Column{SysAuditLogsColumns[4], SysAuditLogsColumns[8], SysAuditLogsColumns[9]},
			},
			{
				Name:    "auditlog_tenant_id_ip_address_created_at",
				Unique:  false,
				Columns: []*schema.Column{SysAuditLogsColumns[4], SysAuditLogsColumns[15], SysAuditLogsColumns[1]},
				Annotation: &entsql.IndexAnnotation{
					DescColumns: map[string]bool{
						SysAuditLogsColumns[1].Name: true,
					},
				},
			},
			{
				Name:    "auditlog_tenant_id_response_status_created_at",
				Unique:  false,
				Columns: []*schema.Column{SysAuditLogsColumns[4], SysAuditLogsColumns[13], SysAuditLogsColumns[1]},
				Annotation: &entsql.IndexAnnotation{
					DescColumns: map[string]bool{
						SysAuditLogsColumns[1].Name: true,
					},
				},
			},
			{
				Name:    "auditlog_tenant_id_created_at",
				Unique:  false,
				Columns: []*schema.Column{SysAuditLogsColumns[4], SysAuditLogsColumns[1]},
				Annotation: &entsql.IndexAnnotation{
					DescColumns: map[string]bool{
						SysAuditLogsColumns[1].Name: true,
					},
				},
			},
		},
	}
	// SysCasbinRulesColumns holds the columns for the "sys_casbin_rules" table.
	SysCasbinRulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Default: 1},
		{Name: "tenant_id", Type: field.TypeUint64, Default: 1},
		{Name: "ptype", Type: field.TypeString},
		{Name: "v0", Type: field.TypeString, Nullable: true},
		{Name: "v1", Type: field.TypeString, Nullable: true},
		{Name: "v2", Type: field.TypeString, Nullable: true},
		{Name: "v3", Type: field.TypeString, Nullable: true},
		{Name: "v4", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "v5", Type: field.TypeString, Nullable: true},
		{Name: "service_name", Type: field.TypeString},
		{Name: "rule_name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "category", Type: field.TypeString, Default: "custom"},
		{Name: "version", Type: field.TypeString, Default: "1.0.0"},
		{Name: "require_approval", Type: field.TypeBool, Default: false},
		{Name: "approval_status", Type: field.TypeEnum, Enums: []string{"pending", "approved", "rejected"}, Default: "approved"},
		{Name: "approved_by", Type: field.TypeUint64, Nullable: true},
		{Name: "approved_at", Type: field.TypeTime, Nullable: true},
		{Name: "effective_from", Type: field.TypeTime, Nullable: true},
		{Name: "effective_to", Type: field.TypeTime, Nullable: true},
		{Name: "is_temporary", Type: field.TypeBool, Default: false},
		{Name: "metadata", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "tags", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "usage_count", Type: field.TypeInt64, Default: 0},
		{Name: "last_used_at", Type: field.TypeTime, Nullable: true},
	}
	// SysCasbinRulesTable holds the schema information for the "sys_casbin_rules" table.
	SysCasbinRulesTable = &schema.Table{
		Name:       "sys_casbin_rules",
		Columns:    SysCasbinRulesColumns,
		PrimaryKey: []*schema.Column{SysCasbinRulesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "casbinrule_tenant_id_service_name_status",
				Unique:  false,
				Columns: []*schema.Column{SysCasbinRulesColumns[4], SysCasbinRulesColumns[12], SysCasbinRulesColumns[3]},
			},
			{
				Name:    "casbinrule_ptype_v0_v1",
				Unique:  false,
				Columns: []*schema.Column{SysCasbinRulesColumns[5], SysCasbinRulesColumns[6], SysCasbinRulesColumns[7]},
			},
			{
				Name:    "casbinrule_v0_tenant_id_status",
				Unique:  false,
				Columns: []*schema.Column{SysCasbinRulesColumns[6], SysCasbinRulesColumns[4], SysCasbinRulesColumns[3]},
			},
			{
				Name:    "casbinrule_approval_status_require_approval",
				Unique:  false,
				Columns: []*schema.Column{SysCasbinRulesColumns[18], SysCasbinRulesColumns[17]},
			},
			{
				Name:    "casbinrule_effective_from_effective_to",
				Unique:  false,
				Columns: []*schema.Column{SysCasbinRulesColumns[21], SysCasbinRulesColumns[22]},
			},
			{
				Name:    "casbinrule_category_service_name",
				Unique:  false,
				Columns: []*schema.Column{SysCasbinRulesColumns[15], SysCasbinRulesColumns[12]},
			},
			{
				Name:    "casbinrule_tenant_id_ptype_v0_v1_status",
				Unique:  false,
				Columns: []*schema.Column{SysCasbinRulesColumns[4], SysCasbinRulesColumns[5], SysCasbinRulesColumns[6], SysCasbinRulesColumns[7], SysCasbinRulesColumns[3]},
			},
		},
	}
	// SysConfigurationColumns holds the columns for the "sys_configuration" table.
	SysConfigurationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "sort", Type: field.TypeUint32, Comment: "Sort Number | 排序编号", Default: 1},
		{Name: "state", Type: field.TypeBool, Nullable: true, Comment: "State true: normal false: ban | 状态 true 正常 false 禁用", Default: true},
		{Name: "tenant_id", Type: field.TypeUint64, Comment: "Tenant ID | 租户 ID", Default: 1},
		{Name: "name", Type: field.TypeString, Comment: "Configurarion name | 配置名称"},
		{Name: "key", Type: field.TypeString, Comment: "Configuration key | 配置的键名"},
		{Name: "value", Type: field.TypeString, Comment: "Configuraion value | 配置的值"},
		{Name: "category", Type: field.TypeString, Comment: "Configuration category | 配置的分类"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "Remark | 备注"},
	}
	// SysConfigurationTable holds the schema information for the "sys_configuration" table.
	SysConfigurationTable = &schema.Table{
		Name:       "sys_configuration",
		Comment:    "Dynamic Configuration Table | 动态配置表",
		Columns:    SysConfigurationColumns,
		PrimaryKey: []*schema.Column{SysConfigurationColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "configuration_key_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{SysConfigurationColumns[7], SysConfigurationColumns[5]},
			},
		},
	}
	// SysDepartmentsColumns holds the columns for the "sys_departments" table.
	SysDepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "sort", Type: field.TypeUint32, Comment: "Sort Number | 排序编号", Default: 1},
		{Name: "tenant_id", Type: field.TypeUint64, Comment: "Tenant ID | 租户 ID", Default: 1},
		{Name: "name", Type: field.TypeString, Comment: "Department name | 部门名称"},
		{Name: "ancestors", Type: field.TypeString, Nullable: true, Comment: "Parents' IDs | 父级列表"},
		{Name: "leader", Type: field.TypeString, Nullable: true, Comment: "Department leader | 部门负责人"},
		{Name: "phone", Type: field.TypeString, Nullable: true, Comment: "Leader's phone number | 负责人电话"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "Leader's email | 部门负责人电子邮箱"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "Remark | 备注"},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true, Comment: "Parent department ID | 父级部门ID", Default: 0},
	}
	// SysDepartmentsTable holds the schema information for the "sys_departments" table.
	SysDepartmentsTable = &schema.Table{
		Name:       "sys_departments",
		Comment:    "Department Table | 部门表",
		Columns:    SysDepartmentsColumns,
		PrimaryKey: []*schema.Column{SysDepartmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_departments_sys_departments_children",
				Columns:    []*schema.Column{SysDepartmentsColumns[12]},
				RefColumns: []*schema.Column{SysDepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "department_tenant_id_parent_id_name",
				Unique:  true,
				Columns: []*schema.Column{SysDepartmentsColumns[5], SysDepartmentsColumns[12], SysDepartmentsColumns[6]},
			},
		},
	}
	// SysDictionariesColumns holds the columns for the "sys_dictionaries" table.
	SysDictionariesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "tenant_id", Type: field.TypeUint64, Comment: "Tenant ID | 租户 ID", Default: 1},
		{Name: "title", Type: field.TypeString, Comment: "The title shown in the ui | 展示名称 （建议配合i18n）"},
		{Name: "name", Type: field.TypeString, Comment: "The name of dictionary for search | 字典搜索名称"},
		{Name: "desc", Type: field.TypeString, Nullable: true, Comment: "The description of dictionary | 字典的描述"},
	}
	// SysDictionariesTable holds the schema information for the "sys_dictionaries" table.
	SysDictionariesTable = &schema.Table{
		Name:       "sys_dictionaries",
		Comment:    "Dictionary Table | 字典信息表",
		Columns:    SysDictionariesColumns,
		PrimaryKey: []*schema.Column{SysDictionariesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "dictionary_tenant_id_name",
				Unique:  true,
				Columns: []*schema.Column{SysDictionariesColumns[4], SysDictionariesColumns[6]},
			},
		},
	}
	// SysDictionaryDetailsColumns holds the columns for the "sys_dictionary_details" table.
	SysDictionaryDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "sort", Type: field.TypeUint32, Comment: "Sort Number | 排序编号", Default: 1},
		{Name: "tenant_id", Type: field.TypeUint64, Comment: "Tenant ID | 租户 ID", Default: 1},
		{Name: "title", Type: field.TypeString, Comment: "The title shown in the ui | 展示名称 （建议配合i18n）"},
		{Name: "value", Type: field.TypeString, Comment: "value | 值"},
		{Name: "list_class", Type: field.TypeString, Nullable: true, Comment: "listClass | 列表样式", Default: "default"},
		{Name: "css_class", Type: field.TypeString, Nullable: true, Comment: "css_class | 样式", Default: ""},
		{Name: "is_default", Type: field.TypeUint32, Nullable: true, Comment: "is_default | 是否为默认值", Default: 0},
		{Name: "dictionary_id", Type: field.TypeUint64, Nullable: true, Comment: "Dictionary ID | 字典ID"},
	}
	// SysDictionaryDetailsTable holds the schema information for the "sys_dictionary_details" table.
	SysDictionaryDetailsTable = &schema.Table{
		Name:       "sys_dictionary_details",
		Comment:    "Dictionary Key/Value Table | 字典键值表",
		Columns:    SysDictionaryDetailsColumns,
		PrimaryKey: []*schema.Column{SysDictionaryDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_dictionary_details_sys_dictionaries_dictionary_details",
				Columns:    []*schema.Column{SysDictionaryDetailsColumns[11]},
				RefColumns: []*schema.Column{SysDictionariesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SysMenusColumns holds the columns for the "sys_menus" table.
	SysMenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "sort", Type: field.TypeUint32, Comment: "Sort Number | 排序编号", Default: 1},
		{Name: "tenant_id", Type: field.TypeUint64, Comment: "Tenant ID | 租户 ID", Default: 1},
		{Name: "menu_level", Type: field.TypeUint32, Comment: "Menu level | 菜单层级"},
		{Name: "menu_type", Type: field.TypeUint32, Comment: "Menu type | 菜单类型 （菜单或目录）0 目录 1 菜单"},
		{Name: "path", Type: field.TypeString, Nullable: true, Comment: "Index path | 菜单路由路径", Default: ""},
		{Name: "name", Type: field.TypeString, Comment: "Index name | 菜单名称"},
		{Name: "redirect", Type: field.TypeString, Nullable: true, Comment: "Redirect path | 跳转路径 （外链）", Default: ""},
		{Name: "component", Type: field.TypeString, Nullable: true, Comment: "The path of vue file | 组件路径", Default: ""},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "Disable status | 是否停用", Default: false},
		{Name: "service_name", Type: field.TypeString, Nullable: true, Comment: "Service Name | 服务名称", Default: "Other"},
		{Name: "permission", Type: field.TypeString, Nullable: true, Comment: "Permission symbol | 权限标识"},
		{Name: "title", Type: field.TypeString, Comment: "Menu name | 菜单显示标题"},
		{Name: "icon", Type: field.TypeString, Comment: "Menu icon | 菜单图标"},
		{Name: "hide_menu", Type: field.TypeBool, Nullable: true, Comment: "Hide menu | 是否隐藏菜单", Default: false},
		{Name: "hide_breadcrumb", Type: field.TypeBool, Nullable: true, Comment: "Hide the breadcrumb | 隐藏面包屑", Default: false},
		{Name: "ignore_keep_alive", Type: field.TypeBool, Nullable: true, Comment: "Do not keep alive the tab | 取消页面缓存", Default: false},
		{Name: "hide_tab", Type: field.TypeBool, Nullable: true, Comment: "Hide the tab header | 隐藏页头", Default: false},
		{Name: "frame_src", Type: field.TypeString, Nullable: true, Comment: "Show iframe | 内嵌 iframe", Default: ""},
		{Name: "carry_param", Type: field.TypeBool, Nullable: true, Comment: "The route carries parameters or not | 携带参数", Default: false},
		{Name: "hide_children_in_menu", Type: field.TypeBool, Nullable: true, Comment: "Hide children menu or not | 隐藏所有子菜单", Default: false},
		{Name: "affix", Type: field.TypeBool, Nullable: true, Comment: "Affix tab | Tab 固定", Default: false},
		{Name: "dynamic_level", Type: field.TypeUint32, Nullable: true, Comment: "The maximum number of pages the router can open | 能打开的子TAB数", Default: 20},
		{Name: "real_path", Type: field.TypeString, Nullable: true, Comment: "The real path of the route without dynamic part | 菜单路由不包含参数部分", Default: ""},
		{Name: "params", Type: field.TypeString, Nullable: true, Comment: "The path Params | 菜单路由参数", Default: ""},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true, Comment: "Parent menu ID | 父菜单ID", Default: 100000},
	}
	// SysMenusTable holds the schema information for the "sys_menus" table.
	SysMenusTable = &schema.Table{
		Name:       "sys_menus",
		Comment:    "Menu Table | 菜单表",
		Columns:    SysMenusColumns,
		PrimaryKey: []*schema.Column{SysMenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_menus_sys_menus_children",
				Columns:    []*schema.Column{SysMenusColumns[27]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "idx_menu_name_type",
				Unique:  true,
				Columns: []*schema.Column{SysMenusColumns[8], SysMenusColumns[6], SysMenusColumns[4]},
			},
			{
				Name:    "menu_path_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{SysMenusColumns[7], SysMenusColumns[4]},
			},
		},
	}
	// SysOauthAccountsColumns holds the columns for the "sys_oauth_accounts" table.
	SysOauthAccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "tenant_id", Type: field.TypeUint64, Comment: "Tenant ID | 租户 ID", Default: 1},
		{Name: "provider_type", Type: field.TypeString, Size: 20, Comment: "Provider type (wechat, qq, github, google, facebook) | 提供商类型"},
		{Name: "provider_user_id", Type: field.TypeString, Size: 100, Comment: "User ID from OAuth provider | 第三方平台的用户ID"},
		{Name: "provider_username", Type: field.TypeString, Nullable: true, Size: 100, Comment: "Username from OAuth provider | 第三方平台的用户名"},
		{Name: "provider_nickname", Type: field.TypeString, Nullable: true, Size: 100, Comment: "Nickname from OAuth provider | 第三方平台的昵称"},
		{Name: "provider_email", Type: field.TypeString, Nullable: true, Size: 255, Comment: "Email from OAuth provider | 第三方平台的邮箱"},
		{Name: "provider_avatar", Type: field.TypeString, Nullable: true, Size: 500, Comment: "Avatar URL from OAuth provider | 第三方平台的头像URL"},
		{Name: "access_token", Type: field.TypeString, Size: 2000, Comment: "Access token (encrypted) | 访问令牌（加密存储）"},
		{Name: "refresh_token", Type: field.TypeString, Nullable: true, Size: 2000, Comment: "Refresh token (encrypted) | 刷新令牌（加密存储）"},
		{Name: "token_expires_at", Type: field.TypeTime, Nullable: true, Comment: "Token expiration time | 令牌过期时间"},
		{Name: "extra_data", Type: field.TypeJSON, Nullable: true, Comment: "Extra data from provider | 第三方平台的额外数据"},
		{Name: "last_login_at", Type: field.TypeTime, Nullable: true, Comment: "Last login time | 最后登录时间"},
		{Name: "last_login_ip", Type: field.TypeString, Nullable: true, Size: 45, Comment: "Last login IP address | 最后登录IP地址"},
		{Name: "login_count", Type: field.TypeUint32, Comment: "Login count | 登录次数", Default: 0},
		{Name: "department_id", Type: field.TypeUint64, Nullable: true, Comment: "Department ID of the bound user | 绑定用户的部门ID", Default: 0},
		{Name: "provider_id", Type: field.TypeUint64, Comment: "OAuth provider ID | OAuth提供商ID"},
		{Name: "user_id", Type: field.TypeUUID, Comment: "Associated user ID | 关联的用户ID"},
	}
	// SysOauthAccountsTable holds the schema information for the "sys_oauth_accounts" table.
	SysOauthAccountsTable = &schema.Table{
		Name:       "sys_oauth_accounts",
		Comment:    "OAuth Account Binding Table | OAuth账户绑定表",
		Columns:    SysOauthAccountsColumns,
		PrimaryKey: []*schema.Column{SysOauthAccountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_oauth_accounts_sys_oauth_providers_oauth_accounts",
				Columns:    []*schema.Column{SysOauthAccountsColumns[19]},
				RefColumns: []*schema.Column{SysOauthProvidersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "sys_oauth_accounts_sys_users_oauth_accounts",
				Columns:    []*schema.Column{SysOauthAccountsColumns[20]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "oauthaccount_user_id_provider_id_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{SysOauthAccountsColumns[20], SysOauthAccountsColumns[19], SysOauthAccountsColumns[4]},
			},
			{
				Name:    "oauthaccount_provider_id_provider_user_id_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{SysOauthAccountsColumns[19], SysOauthAccountsColumns[6], SysOauthAccountsColumns[4]},
			},
			{
				Name:    "oauthaccount_provider_type_provider_user_id_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthAccountsColumns[5], SysOauthAccountsColumns[6], SysOauthAccountsColumns[4]},
			},
			{
				Name:    "oauthaccount_user_id_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthAccountsColumns[20], SysOauthAccountsColumns[4]},
			},
			{
				Name:    "oauthaccount_status_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthAccountsColumns[3], SysOauthAccountsColumns[4]},
			},
			{
				Name:    "oauthaccount_last_login_at_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthAccountsColumns[15], SysOauthAccountsColumns[4]},
			},
			{
				Name:    "oauthaccount_department_id_tenant_id_status",
				Unique:  false,
				Columns: []*schema.Column{SysOauthAccountsColumns[18], SysOauthAccountsColumns[4], SysOauthAccountsColumns[3]},
			},
		},
	}
	// SysOauthProvidersColumns holds the columns for the "sys_oauth_providers" table.
	SysOauthProvidersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "tenant_id", Type: field.TypeUint64, Comment: "Tenant ID | 租户 ID", Default: 1},
		{Name: "name", Type: field.TypeString, Size: 50, Comment: "The provider's name | 提供商名称"},
		{Name: "display_name", Type: field.TypeString, Nullable: true, Size: 100, Comment: "Display name for UI | UI显示名称"},
		{Name: "type", Type: field.TypeString, Size: 20, Comment: "The provider type (wechat, qq, github, google, facebook) | 提供商类型"},
		{Name: "provider_type", Type: field.TypeString, Size: 20, Comment: "Provider type: oauth2, oidc, saml | 认证协议类型", Default: "oauth2"},
		{Name: "client_id", Type: field.TypeString, Size: 255, Comment: "The client id | 客户端 ID"},
		{Name: "client_secret", Type: field.TypeString, Size: 1000, Comment: "The client secret (original) | 客户端密钥（原始）"},
		{Name: "encrypted_secret", Type: field.TypeString, Nullable: true, Size: 1000, Comment: "Encrypted client secret | 加密后的客户端密钥"},
		{Name: "encryption_key_id", Type: field.TypeString, Nullable: true, Size: 50, Comment: "Encryption key ID | 加密密钥ID"},
		{Name: "redirect_url", Type: field.TypeString, Size: 500, Comment: "The redirect url | 回调地址"},
		{Name: "scopes", Type: field.TypeString, Nullable: true, Size: 500, Comment: "The scopes | 权限范围"},
		{Name: "auth_url", Type: field.TypeString, Size: 500, Comment: "OAuth authorization URL | OAuth授权URL"},
		{Name: "token_url", Type: field.TypeString, Size: 500, Comment: "OAuth token exchange URL | OAuth令牌交换URL"},
		{Name: "info_url", Type: field.TypeString, Size: 500, Comment: "User info URL | 用户信息获取URL"},
		{Name: "auth_style", Type: field.TypeInt, Comment: "OAuth auth style (1=params, 2=header) | OAuth认证方式", Default: 2},
		{Name: "extra_config", Type: field.TypeJSON, Nullable: true, Comment: "Provider specific configuration | 提供商特定配置"},
		{Name: "enabled", Type: field.TypeBool, Comment: "Whether the provider is enabled | 是否启用", Default: true},
		{Name: "sort", Type: field.TypeUint32, Comment: "Sort order | 排序", Default: 0},
		{Name: "remark", Type: field.TypeString, Nullable: true, Size: 200, Comment: "Remark | 备注"},
		{Name: "support_pkce", Type: field.TypeBool, Comment: "Whether support PKCE | 是否支持PKCE", Default: false},
		{Name: "icon_url", Type: field.TypeString, Nullable: true, Size: 500, Comment: "Provider icon URL | 提供商图标URL"},
		{Name: "cache_ttl", Type: field.TypeInt, Comment: "Configuration cache TTL in seconds | 配置缓存TTL(秒)", Default: 3600},
		{Name: "webhook_url", Type: field.TypeString, Nullable: true, Size: 500, Comment: "Webhook URL for configuration updates | 配置更新webhook地址"},
		{Name: "success_count", Type: field.TypeInt, Comment: "Successful OAuth attempts count | 成功登录次数", Default: 0},
		{Name: "failure_count", Type: field.TypeInt, Comment: "Failed OAuth attempts count | 失败登录次数", Default: 0},
		{Name: "last_used_at", Type: field.TypeTime, Nullable: true, Comment: "Last used timestamp | 最后使用时间"},
	}
	// SysOauthProvidersTable holds the schema information for the "sys_oauth_providers" table.
	SysOauthProvidersTable = &schema.Table{
		Name:       "sys_oauth_providers",
		Comment:    "OAuth Provider Configuration Table | OAuth第三方登录提供商配置表",
		Columns:    SysOauthProvidersColumns,
		PrimaryKey: []*schema.Column{SysOauthProvidersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "oauthprovider_name",
				Unique:  true,
				Columns: []*schema.Column{SysOauthProvidersColumns[5]},
			},
			{
				Name:    "oauthprovider_type_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{SysOauthProvidersColumns[7], SysOauthProvidersColumns[4]},
			},
			{
				Name:    "oauthprovider_enabled_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthProvidersColumns[20], SysOauthProvidersColumns[4]},
			},
			{
				Name:    "oauthprovider_status_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthProvidersColumns[3], SysOauthProvidersColumns[4]},
			},
			{
				Name:    "oauthprovider_provider_type_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthProvidersColumns[8], SysOauthProvidersColumns[4]},
			},
			{
				Name:    "oauthprovider_sort_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthProvidersColumns[21], SysOauthProvidersColumns[4]},
			},
			{
				Name:    "oauthprovider_last_used_at_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthProvidersColumns[29], SysOauthProvidersColumns[4]},
			},
			{
				Name:    "oauthprovider_enabled_status_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthProvidersColumns[20], SysOauthProvidersColumns[3], SysOauthProvidersColumns[4]},
			},
		},
	}
	// SysOauthSessionsColumns holds the columns for the "sys_oauth_sessions" table.
	SysOauthSessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "tenant_id", Type: field.TypeUint64, Comment: "Tenant ID | 租户 ID", Default: 1},
		{Name: "session_id", Type: field.TypeString, Unique: true, Size: 128, Comment: "Unique session identifier | 唯一会话标识符"},
		{Name: "state", Type: field.TypeString, Size: 256, Comment: "OAuth state parameter | OAuth state参数"},
		{Name: "redirect_uri", Type: field.TypeString, Size: 500, Comment: "OAuth redirect URI | OAuth回调地址"},
		{Name: "scope", Type: field.TypeString, Nullable: true, Size: 500, Comment: "Requested OAuth scopes | 请求的OAuth权限范围"},
		{Name: "code_challenge", Type: field.TypeString, Nullable: true, Size: 128, Comment: "PKCE code challenge | PKCE代码挑战"},
		{Name: "code_challenge_method", Type: field.TypeString, Nullable: true, Size: 10, Comment: "PKCE code challenge method | PKCE代码挑战方法"},
		{Name: "code_verifier", Type: field.TypeString, Nullable: true, Size: 128, Comment: "PKCE code verifier | PKCE代码验证器"},
		{Name: "expires_at", Type: field.TypeTime, Comment: "Session expiration time | 会话过期时间"},
		{Name: "client_ip", Type: field.TypeString, Nullable: true, Size: 45, Comment: "Client IP address | 客户端IP地址"},
		{Name: "user_agent", Type: field.TypeString, Nullable: true, Size: 500, Comment: "Client user agent | 客户端用户代理"},
		{Name: "authorization_code", Type: field.TypeString, Nullable: true, Size: 512, Comment: "OAuth authorization code | OAuth授权码"},
		{Name: "code_received_at", Type: field.TypeTime, Nullable: true, Comment: "Authorization code received time | 授权码接收时间"},
		{Name: "callback_data", Type: field.TypeJSON, Nullable: true, Comment: "OAuth callback additional data | OAuth回调额外数据"},
		{Name: "error_code", Type: field.TypeString, Nullable: true, Size: 50, Comment: "OAuth error code | OAuth错误码"},
		{Name: "error_description", Type: field.TypeString, Nullable: true, Size: 500, Comment: "OAuth error description | OAuth错误描述"},
		{Name: "retry_count", Type: field.TypeInt, Comment: "Retry attempts count | 重试次数", Default: 0},
		{Name: "department_id", Type: field.TypeUint64, Nullable: true, Comment: "Department ID when session was created | 会话创建时的部门ID", Default: 0},
		{Name: "provider_id", Type: field.TypeUint64, Comment: "OAuth provider ID | OAuth提供商ID"},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true, Comment: "Associated user ID (if logged in) | 关联的用户ID（如果已登录）"},
	}
	// SysOauthSessionsTable holds the schema information for the "sys_oauth_sessions" table.
	SysOauthSessionsTable = &schema.Table{
		Name:       "sys_oauth_sessions",
		Comment:    "OAuth Session Management Table | OAuth会话管理表",
		Columns:    SysOauthSessionsColumns,
		PrimaryKey: []*schema.Column{SysOauthSessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_oauth_sessions_sys_oauth_providers_oauth_sessions",
				Columns:    []*schema.Column{SysOauthSessionsColumns[22]},
				RefColumns: []*schema.Column{SysOauthProvidersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "sys_oauth_sessions_sys_users_oauth_sessions",
				Columns:    []*schema.Column{SysOauthSessionsColumns[23]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "oauthsession_session_id",
				Unique:  true,
				Columns: []*schema.Column{SysOauthSessionsColumns[5]},
			},
			{
				Name:    "oauthsession_state_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthSessionsColumns[6], SysOauthSessionsColumns[4]},
			},
			{
				Name:    "oauthsession_provider_id_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthSessionsColumns[22], SysOauthSessionsColumns[4]},
			},
			{
				Name:    "oauthsession_user_id_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthSessionsColumns[23], SysOauthSessionsColumns[4]},
			},
			{
				Name:    "oauthsession_status_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthSessionsColumns[3], SysOauthSessionsColumns[4]},
			},
			{
				Name:    "oauthsession_expires_at_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthSessionsColumns[12], SysOauthSessionsColumns[4]},
			},
			{
				Name:    "oauthsession_authorization_code_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthSessionsColumns[15], SysOauthSessionsColumns[4]},
			},
			{
				Name:    "oauthsession_client_ip_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthSessionsColumns[13], SysOauthSessionsColumns[4]},
			},
			{
				Name:    "oauthsession_status_expires_at_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthSessionsColumns[3], SysOauthSessionsColumns[12], SysOauthSessionsColumns[4]},
			},
			{
				Name:    "oauthsession_department_id_tenant_id_status",
				Unique:  false,
				Columns: []*schema.Column{SysOauthSessionsColumns[21], SysOauthSessionsColumns[4], SysOauthSessionsColumns[3]},
			},
			{
				Name:    "oauthsession_department_id_expires_at_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysOauthSessionsColumns[21], SysOauthSessionsColumns[12], SysOauthSessionsColumns[4]},
			},
		},
	}
	// SysPositionsColumns holds the columns for the "sys_positions" table.
	SysPositionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "sort", Type: field.TypeUint32, Comment: "Sort Number | 排序编号", Default: 1},
		{Name: "tenant_id", Type: field.TypeUint64, Comment: "Tenant ID | 租户 ID", Default: 1},
		{Name: "name", Type: field.TypeString, Comment: "Position Name | 职位名称"},
		{Name: "code", Type: field.TypeString, Comment: "The code of position | 职位编码"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "Remark | 备注"},
		{Name: "dept_id", Type: field.TypeUint64, Nullable: true, Comment: "deptId | 所属部门ID", Default: 1},
	}
	// SysPositionsTable holds the schema information for the "sys_positions" table.
	SysPositionsTable = &schema.Table{
		Name:       "sys_positions",
		Comment:    "Position Table | 职位信息表",
		Columns:    SysPositionsColumns,
		PrimaryKey: []*schema.Column{SysPositionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_positions_sys_departments_posts",
				Columns:    []*schema.Column{SysPositionsColumns[9]},
				RefColumns: []*schema.Column{SysDepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "position_code_dept_id_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{SysPositionsColumns[7], SysPositionsColumns[9], SysPositionsColumns[5]},
			},
		},
	}
	// SysRolesColumns holds the columns for the "sys_roles" table.
	SysRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "tenant_id", Type: field.TypeUint64, Comment: "Tenant ID | 租户 ID", Default: 1},
		{Name: "name", Type: field.TypeString, Comment: "Role name | 角色名"},
		{Name: "code", Type: field.TypeString, Comment: "Role code for permission control in front end | 角色码，用于前端权限控制"},
		{Name: "default_router", Type: field.TypeString, Comment: "Default menu : dashboard | 默认登录页面", Default: "dashboard"},
		{Name: "remark", Type: field.TypeString, Comment: "Remark | 备注", Default: ""},
		{Name: "sort", Type: field.TypeUint32, Comment: "Order number | 排序编号", Default: 0},
		{Name: "custom_dept_ids", Type: field.TypeJSON, Nullable: true, Comment: "Custom department setting for data permission | 自定义部门数据权限"},
	}
	// SysRolesTable holds the schema information for the "sys_roles" table.
	SysRolesTable = &schema.Table{
		Name:       "sys_roles",
		Comment:    "Role Table | 角色信息表",
		Columns:    SysRolesColumns,
		PrimaryKey: []*schema.Column{SysRolesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "role_code_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{SysRolesColumns[6], SysRolesColumns[4]},
			},
		},
	}
	// SysTenantsColumns holds the columns for the "sys_tenants" table.
	SysTenantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "name", Type: field.TypeString, Comment: "Tenant name | 租户名称"},
		{Name: "code", Type: field.TypeString, Unique: true, Comment: "Tenant code for identification | 租户标识码"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "Tenant description | 租户描述"},
		{Name: "expired_at", Type: field.TypeTime, Nullable: true, Comment: "Tenant expiration time | 租户过期时间"},
		{Name: "config", Type: field.TypeJSON, Nullable: true, Comment: "Tenant configuration | 租户配置"},
		{Name: "created_by", Type: field.TypeUint64, Nullable: true, Comment: "Creator user ID | 创建者用户ID"},
	}
	// SysTenantsTable holds the schema information for the "sys_tenants" table.
	SysTenantsTable = &schema.Table{
		Name:       "sys_tenants",
		Comment:    "Tenant Table | 租户信息表",
		Columns:    SysTenantsColumns,
		PrimaryKey: []*schema.Column{SysTenantsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "tenant_code",
				Unique:  true,
				Columns: []*schema.Column{SysTenantsColumns[5]},
			},
			{
				Name:    "tenant_status",
				Unique:  false,
				Columns: []*schema.Column{SysTenantsColumns[3]},
			},
			{
				Name:    "tenant_expired_at",
				Unique:  false,
				Columns: []*schema.Column{SysTenantsColumns[7]},
			},
		},
	}
	// SysTokensColumns holds the columns for the "sys_tokens" table.
	SysTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Comment: "UUID"},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "tenant_id", Type: field.TypeUint64, Comment: "Tenant ID | 租户 ID", Default: 1},
		{Name: "uuid", Type: field.TypeUUID, Comment: " User's UUID | 用户的UUID"},
		{Name: "username", Type: field.TypeString, Comment: "Username | 用户名", Default: "unknown"},
		{Name: "token", Type: field.TypeString, Comment: "Token string | Token 字符串", SchemaType: map[string]string{"mysql": "varchar(1000)"}},
		{Name: "source", Type: field.TypeString, Comment: "Log in source such as GitHub | Token 来源 （本地为core, 第三方如github等）"},
		{Name: "expired_at", Type: field.TypeTime, Comment: " Expire time | 过期时间"},
		{Name: "department_id", Type: field.TypeUint64, Nullable: true, Comment: "Department ID when token was issued | Token签发时的部门ID", Default: 0},
	}
	// SysTokensTable holds the schema information for the "sys_tokens" table.
	SysTokensTable = &schema.Table{
		Name:       "sys_tokens",
		Comment:    "Token Log Table | 令牌信息表",
		Columns:    SysTokensColumns,
		PrimaryKey: []*schema.Column{SysTokensColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "token_uuid_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysTokensColumns[5], SysTokensColumns[4]},
			},
			{
				Name:    "token_uuid_tenant_id_status",
				Unique:  false,
				Columns: []*schema.Column{SysTokensColumns[5], SysTokensColumns[4], SysTokensColumns[3]},
			},
			{
				Name:    "token_expired_at_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SysTokensColumns[9], SysTokensColumns[4]},
			},
			{
				Name:    "token_department_id_tenant_id_status",
				Unique:  false,
				Columns: []*schema.Column{SysTokensColumns[10], SysTokensColumns[4], SysTokensColumns[3]},
			},
		},
	}
	// SysUsersColumns holds the columns for the "sys_users" table.
	SysUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Comment: "UUID"},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "tenant_id", Type: field.TypeUint64, Comment: "Tenant ID | 租户 ID", Default: 1},
		{Name: "username", Type: field.TypeString, Comment: "User's login name | 登录名"},
		{Name: "password", Type: field.TypeString, Comment: "Password | 密码"},
		{Name: "nickname", Type: field.TypeString, Comment: "Nickname | 昵称"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "The description of user | 用户的描述信息"},
		{Name: "home_path", Type: field.TypeString, Comment: "The home page that the user enters after logging in | 用户登陆后进入的首页", Default: "/dashboard"},
		{Name: "mobile", Type: field.TypeString, Nullable: true, Comment: "Mobile number | 手机号"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "Email | 邮箱号"},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Comment: "Avatar | 头像路径", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "department_id", Type: field.TypeUint64, Nullable: true, Comment: "Department ID | 部门ID", Default: 1},
	}
	// SysUsersTable holds the schema information for the "sys_users" table.
	SysUsersTable = &schema.Table{
		Name:       "sys_users",
		Comment:    "User Table | 用户信息表",
		Columns:    SysUsersColumns,
		PrimaryKey: []*schema.Column{SysUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_users_sys_departments_departments",
				Columns:    []*schema.Column{SysUsersColumns[13]},
				RefColumns: []*schema.Column{SysDepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "user_username_email_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{SysUsersColumns[5], SysUsersColumns[11], SysUsersColumns[4]},
			},
		},
	}
	// RoleMenusColumns holds the columns for the "role_menus" table.
	RoleMenusColumns = []*schema.Column{
		{Name: "role_id", Type: field.TypeUint64},
		{Name: "menu_id", Type: field.TypeUint64},
	}
	// RoleMenusTable holds the schema information for the "role_menus" table.
	RoleMenusTable = &schema.Table{
		Name:       "role_menus",
		Columns:    RoleMenusColumns,
		PrimaryKey: []*schema.Column{RoleMenusColumns[0], RoleMenusColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_menus_role_id",
				Columns:    []*schema.Column{RoleMenusColumns[0]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "role_menus_menu_id",
				Columns:    []*schema.Column{RoleMenusColumns[1]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserPositionsColumns holds the columns for the "user_positions" table.
	UserPositionsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "position_id", Type: field.TypeUint64},
	}
	// UserPositionsTable holds the schema information for the "user_positions" table.
	UserPositionsTable = &schema.Table{
		Name:       "user_positions",
		Columns:    UserPositionsColumns,
		PrimaryKey: []*schema.Column{UserPositionsColumns[0], UserPositionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_positions_user_id",
				Columns:    []*schema.Column{UserPositionsColumns[0]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_positions_position_id",
				Columns:    []*schema.Column{UserPositionsColumns[1]},
				RefColumns: []*schema.Column{SysPositionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserRolesColumns holds the columns for the "user_roles" table.
	UserRolesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "role_id", Type: field.TypeUint64},
	}
	// UserRolesTable holds the schema information for the "user_roles" table.
	UserRolesTable = &schema.Table{
		Name:       "user_roles",
		Columns:    UserRolesColumns,
		PrimaryKey: []*schema.Column{UserRolesColumns[0], UserRolesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_roles_user_id",
				Columns:    []*schema.Column{UserRolesColumns[0]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_roles_role_id",
				Columns:    []*schema.Column{UserRolesColumns[1]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SysApisTable,
		SysAuditLogsTable,
		SysCasbinRulesTable,
		SysConfigurationTable,
		SysDepartmentsTable,
		SysDictionariesTable,
		SysDictionaryDetailsTable,
		SysMenusTable,
		SysOauthAccountsTable,
		SysOauthProvidersTable,
		SysOauthSessionsTable,
		SysPositionsTable,
		SysRolesTable,
		SysTenantsTable,
		SysTokensTable,
		SysUsersTable,
		RoleMenusTable,
		UserPositionsTable,
		UserRolesTable,
	}
)

func init() {
	SysApisTable.Annotation = &entsql.Annotation{
		Table: "sys_apis",
	}
	SysAuditLogsTable.Annotation = &entsql.Annotation{
		Table: "sys_audit_logs",
	}
	SysCasbinRulesTable.Annotation = &entsql.Annotation{
		Table:   "sys_casbin_rules",
		Options: "ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Casbin权限规则表'",
	}
	SysConfigurationTable.Annotation = &entsql.Annotation{
		Table: "sys_configuration",
	}
	SysDepartmentsTable.ForeignKeys[0].RefTable = SysDepartmentsTable
	SysDepartmentsTable.Annotation = &entsql.Annotation{
		Table: "sys_departments",
	}
	SysDictionariesTable.Annotation = &entsql.Annotation{
		Table: "sys_dictionaries",
	}
	SysDictionaryDetailsTable.ForeignKeys[0].RefTable = SysDictionariesTable
	SysDictionaryDetailsTable.Annotation = &entsql.Annotation{
		Table: "sys_dictionary_details",
	}
	SysMenusTable.ForeignKeys[0].RefTable = SysMenusTable
	SysMenusTable.Annotation = &entsql.Annotation{
		Table: "sys_menus",
	}
	SysOauthAccountsTable.ForeignKeys[0].RefTable = SysOauthProvidersTable
	SysOauthAccountsTable.ForeignKeys[1].RefTable = SysUsersTable
	SysOauthAccountsTable.Annotation = &entsql.Annotation{
		Table: "sys_oauth_accounts",
	}
	SysOauthProvidersTable.Annotation = &entsql.Annotation{
		Table: "sys_oauth_providers",
	}
	SysOauthSessionsTable.ForeignKeys[0].RefTable = SysOauthProvidersTable
	SysOauthSessionsTable.ForeignKeys[1].RefTable = SysUsersTable
	SysOauthSessionsTable.Annotation = &entsql.Annotation{
		Table: "sys_oauth_sessions",
	}
	SysPositionsTable.ForeignKeys[0].RefTable = SysDepartmentsTable
	SysPositionsTable.Annotation = &entsql.Annotation{
		Table: "sys_positions",
	}
	SysRolesTable.Annotation = &entsql.Annotation{
		Table: "sys_roles",
	}
	SysTenantsTable.Annotation = &entsql.Annotation{
		Table: "sys_tenants",
	}
	SysTokensTable.Annotation = &entsql.Annotation{
		Table: "sys_tokens",
	}
	SysUsersTable.ForeignKeys[0].RefTable = SysDepartmentsTable
	SysUsersTable.Annotation = &entsql.Annotation{
		Table: "sys_users",
	}
	RoleMenusTable.ForeignKeys[0].RefTable = SysRolesTable
	RoleMenusTable.ForeignKeys[1].RefTable = SysMenusTable
	UserPositionsTable.ForeignKeys[0].RefTable = SysUsersTable
	UserPositionsTable.ForeignKeys[1].RefTable = SysPositionsTable
	UserRolesTable.ForeignKeys[0].RefTable = SysUsersTable
	UserRolesTable.ForeignKeys[1].RefTable = SysRolesTable
}
