// Code generated by ent, DO NOT EDIT.

package auditlog

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/coder-lulu/newbee-core/rpc/ent/predicate"
	uuid "github.com/gofrs/uuid/v5"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldUpdatedAt, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v uint8) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldStatus, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldTenantID, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldUserID, v))
}

// UserName applies equality check predicate on the "user_name" field. It's identical to UserNameEQ.
func UserName(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldUserName, v))
}

// ResourceType applies equality check predicate on the "resource_type" field. It's identical to ResourceTypeEQ.
func ResourceType(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldResourceType, v))
}

// ResourceID applies equality check predicate on the "resource_id" field. It's identical to ResourceIDEQ.
func ResourceID(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldResourceID, v))
}

// RequestMethod applies equality check predicate on the "request_method" field. It's identical to RequestMethodEQ.
func RequestMethod(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldRequestMethod, v))
}

// RequestPath applies equality check predicate on the "request_path" field. It's identical to RequestPathEQ.
func RequestPath(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldRequestPath, v))
}

// RequestData applies equality check predicate on the "request_data" field. It's identical to RequestDataEQ.
func RequestData(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldRequestData, v))
}

// ResponseStatus applies equality check predicate on the "response_status" field. It's identical to ResponseStatusEQ.
func ResponseStatus(v int) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldResponseStatus, v))
}

// ResponseData applies equality check predicate on the "response_data" field. It's identical to ResponseDataEQ.
func ResponseData(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldResponseData, v))
}

// IPAddress applies equality check predicate on the "ip_address" field. It's identical to IPAddressEQ.
func IPAddress(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldIPAddress, v))
}

// UserAgent applies equality check predicate on the "user_agent" field. It's identical to UserAgentEQ.
func UserAgent(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldUserAgent, v))
}

// DurationMs applies equality check predicate on the "duration_ms" field. It's identical to DurationMsEQ.
func DurationMs(v int64) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldDurationMs, v))
}

// ErrorMessage applies equality check predicate on the "error_message" field. It's identical to ErrorMessageEQ.
func ErrorMessage(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldErrorMessage, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldUpdatedAt, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v uint8) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v uint8) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...uint8) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...uint8) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v uint8) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v uint8) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v uint8) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v uint8) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldStatus, v))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotNull(FieldStatus))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContainsFold(FieldTenantID, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContainsFold(FieldUserID, v))
}

// UserNameEQ applies the EQ predicate on the "user_name" field.
func UserNameEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldUserName, v))
}

// UserNameNEQ applies the NEQ predicate on the "user_name" field.
func UserNameNEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldUserName, v))
}

// UserNameIn applies the In predicate on the "user_name" field.
func UserNameIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldUserName, vs...))
}

// UserNameNotIn applies the NotIn predicate on the "user_name" field.
func UserNameNotIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldUserName, vs...))
}

// UserNameGT applies the GT predicate on the "user_name" field.
func UserNameGT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldUserName, v))
}

// UserNameGTE applies the GTE predicate on the "user_name" field.
func UserNameGTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldUserName, v))
}

// UserNameLT applies the LT predicate on the "user_name" field.
func UserNameLT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldUserName, v))
}

// UserNameLTE applies the LTE predicate on the "user_name" field.
func UserNameLTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldUserName, v))
}

// UserNameContains applies the Contains predicate on the "user_name" field.
func UserNameContains(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContains(FieldUserName, v))
}

// UserNameHasPrefix applies the HasPrefix predicate on the "user_name" field.
func UserNameHasPrefix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasPrefix(FieldUserName, v))
}

// UserNameHasSuffix applies the HasSuffix predicate on the "user_name" field.
func UserNameHasSuffix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasSuffix(FieldUserName, v))
}

// UserNameIsNil applies the IsNil predicate on the "user_name" field.
func UserNameIsNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIsNull(FieldUserName))
}

// UserNameNotNil applies the NotNil predicate on the "user_name" field.
func UserNameNotNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotNull(FieldUserName))
}

// UserNameEqualFold applies the EqualFold predicate on the "user_name" field.
func UserNameEqualFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEqualFold(FieldUserName, v))
}

// UserNameContainsFold applies the ContainsFold predicate on the "user_name" field.
func UserNameContainsFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContainsFold(FieldUserName, v))
}

// OperationTypeEQ applies the EQ predicate on the "operation_type" field.
func OperationTypeEQ(v OperationType) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldOperationType, v))
}

// OperationTypeNEQ applies the NEQ predicate on the "operation_type" field.
func OperationTypeNEQ(v OperationType) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldOperationType, v))
}

// OperationTypeIn applies the In predicate on the "operation_type" field.
func OperationTypeIn(vs ...OperationType) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldOperationType, vs...))
}

// OperationTypeNotIn applies the NotIn predicate on the "operation_type" field.
func OperationTypeNotIn(vs ...OperationType) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldOperationType, vs...))
}

// ResourceTypeEQ applies the EQ predicate on the "resource_type" field.
func ResourceTypeEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldResourceType, v))
}

// ResourceTypeNEQ applies the NEQ predicate on the "resource_type" field.
func ResourceTypeNEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldResourceType, v))
}

// ResourceTypeIn applies the In predicate on the "resource_type" field.
func ResourceTypeIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldResourceType, vs...))
}

// ResourceTypeNotIn applies the NotIn predicate on the "resource_type" field.
func ResourceTypeNotIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldResourceType, vs...))
}

// ResourceTypeGT applies the GT predicate on the "resource_type" field.
func ResourceTypeGT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldResourceType, v))
}

// ResourceTypeGTE applies the GTE predicate on the "resource_type" field.
func ResourceTypeGTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldResourceType, v))
}

// ResourceTypeLT applies the LT predicate on the "resource_type" field.
func ResourceTypeLT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldResourceType, v))
}

// ResourceTypeLTE applies the LTE predicate on the "resource_type" field.
func ResourceTypeLTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldResourceType, v))
}

// ResourceTypeContains applies the Contains predicate on the "resource_type" field.
func ResourceTypeContains(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContains(FieldResourceType, v))
}

// ResourceTypeHasPrefix applies the HasPrefix predicate on the "resource_type" field.
func ResourceTypeHasPrefix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasPrefix(FieldResourceType, v))
}

// ResourceTypeHasSuffix applies the HasSuffix predicate on the "resource_type" field.
func ResourceTypeHasSuffix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasSuffix(FieldResourceType, v))
}

// ResourceTypeEqualFold applies the EqualFold predicate on the "resource_type" field.
func ResourceTypeEqualFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEqualFold(FieldResourceType, v))
}

// ResourceTypeContainsFold applies the ContainsFold predicate on the "resource_type" field.
func ResourceTypeContainsFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContainsFold(FieldResourceType, v))
}

// ResourceIDEQ applies the EQ predicate on the "resource_id" field.
func ResourceIDEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldResourceID, v))
}

// ResourceIDNEQ applies the NEQ predicate on the "resource_id" field.
func ResourceIDNEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldResourceID, v))
}

// ResourceIDIn applies the In predicate on the "resource_id" field.
func ResourceIDIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldResourceID, vs...))
}

// ResourceIDNotIn applies the NotIn predicate on the "resource_id" field.
func ResourceIDNotIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldResourceID, vs...))
}

// ResourceIDGT applies the GT predicate on the "resource_id" field.
func ResourceIDGT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldResourceID, v))
}

// ResourceIDGTE applies the GTE predicate on the "resource_id" field.
func ResourceIDGTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldResourceID, v))
}

// ResourceIDLT applies the LT predicate on the "resource_id" field.
func ResourceIDLT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldResourceID, v))
}

// ResourceIDLTE applies the LTE predicate on the "resource_id" field.
func ResourceIDLTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldResourceID, v))
}

// ResourceIDContains applies the Contains predicate on the "resource_id" field.
func ResourceIDContains(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContains(FieldResourceID, v))
}

// ResourceIDHasPrefix applies the HasPrefix predicate on the "resource_id" field.
func ResourceIDHasPrefix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasPrefix(FieldResourceID, v))
}

// ResourceIDHasSuffix applies the HasSuffix predicate on the "resource_id" field.
func ResourceIDHasSuffix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasSuffix(FieldResourceID, v))
}

// ResourceIDIsNil applies the IsNil predicate on the "resource_id" field.
func ResourceIDIsNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIsNull(FieldResourceID))
}

// ResourceIDNotNil applies the NotNil predicate on the "resource_id" field.
func ResourceIDNotNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotNull(FieldResourceID))
}

// ResourceIDEqualFold applies the EqualFold predicate on the "resource_id" field.
func ResourceIDEqualFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEqualFold(FieldResourceID, v))
}

// ResourceIDContainsFold applies the ContainsFold predicate on the "resource_id" field.
func ResourceIDContainsFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContainsFold(FieldResourceID, v))
}

// RequestMethodEQ applies the EQ predicate on the "request_method" field.
func RequestMethodEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldRequestMethod, v))
}

// RequestMethodNEQ applies the NEQ predicate on the "request_method" field.
func RequestMethodNEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldRequestMethod, v))
}

// RequestMethodIn applies the In predicate on the "request_method" field.
func RequestMethodIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldRequestMethod, vs...))
}

// RequestMethodNotIn applies the NotIn predicate on the "request_method" field.
func RequestMethodNotIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldRequestMethod, vs...))
}

// RequestMethodGT applies the GT predicate on the "request_method" field.
func RequestMethodGT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldRequestMethod, v))
}

// RequestMethodGTE applies the GTE predicate on the "request_method" field.
func RequestMethodGTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldRequestMethod, v))
}

// RequestMethodLT applies the LT predicate on the "request_method" field.
func RequestMethodLT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldRequestMethod, v))
}

// RequestMethodLTE applies the LTE predicate on the "request_method" field.
func RequestMethodLTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldRequestMethod, v))
}

// RequestMethodContains applies the Contains predicate on the "request_method" field.
func RequestMethodContains(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContains(FieldRequestMethod, v))
}

// RequestMethodHasPrefix applies the HasPrefix predicate on the "request_method" field.
func RequestMethodHasPrefix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasPrefix(FieldRequestMethod, v))
}

// RequestMethodHasSuffix applies the HasSuffix predicate on the "request_method" field.
func RequestMethodHasSuffix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasSuffix(FieldRequestMethod, v))
}

// RequestMethodEqualFold applies the EqualFold predicate on the "request_method" field.
func RequestMethodEqualFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEqualFold(FieldRequestMethod, v))
}

// RequestMethodContainsFold applies the ContainsFold predicate on the "request_method" field.
func RequestMethodContainsFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContainsFold(FieldRequestMethod, v))
}

// RequestPathEQ applies the EQ predicate on the "request_path" field.
func RequestPathEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldRequestPath, v))
}

// RequestPathNEQ applies the NEQ predicate on the "request_path" field.
func RequestPathNEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldRequestPath, v))
}

// RequestPathIn applies the In predicate on the "request_path" field.
func RequestPathIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldRequestPath, vs...))
}

// RequestPathNotIn applies the NotIn predicate on the "request_path" field.
func RequestPathNotIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldRequestPath, vs...))
}

// RequestPathGT applies the GT predicate on the "request_path" field.
func RequestPathGT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldRequestPath, v))
}

// RequestPathGTE applies the GTE predicate on the "request_path" field.
func RequestPathGTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldRequestPath, v))
}

// RequestPathLT applies the LT predicate on the "request_path" field.
func RequestPathLT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldRequestPath, v))
}

// RequestPathLTE applies the LTE predicate on the "request_path" field.
func RequestPathLTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldRequestPath, v))
}

// RequestPathContains applies the Contains predicate on the "request_path" field.
func RequestPathContains(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContains(FieldRequestPath, v))
}

// RequestPathHasPrefix applies the HasPrefix predicate on the "request_path" field.
func RequestPathHasPrefix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasPrefix(FieldRequestPath, v))
}

// RequestPathHasSuffix applies the HasSuffix predicate on the "request_path" field.
func RequestPathHasSuffix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasSuffix(FieldRequestPath, v))
}

// RequestPathEqualFold applies the EqualFold predicate on the "request_path" field.
func RequestPathEqualFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEqualFold(FieldRequestPath, v))
}

// RequestPathContainsFold applies the ContainsFold predicate on the "request_path" field.
func RequestPathContainsFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContainsFold(FieldRequestPath, v))
}

// RequestDataEQ applies the EQ predicate on the "request_data" field.
func RequestDataEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldRequestData, v))
}

// RequestDataNEQ applies the NEQ predicate on the "request_data" field.
func RequestDataNEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldRequestData, v))
}

// RequestDataIn applies the In predicate on the "request_data" field.
func RequestDataIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldRequestData, vs...))
}

// RequestDataNotIn applies the NotIn predicate on the "request_data" field.
func RequestDataNotIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldRequestData, vs...))
}

// RequestDataGT applies the GT predicate on the "request_data" field.
func RequestDataGT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldRequestData, v))
}

// RequestDataGTE applies the GTE predicate on the "request_data" field.
func RequestDataGTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldRequestData, v))
}

// RequestDataLT applies the LT predicate on the "request_data" field.
func RequestDataLT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldRequestData, v))
}

// RequestDataLTE applies the LTE predicate on the "request_data" field.
func RequestDataLTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldRequestData, v))
}

// RequestDataContains applies the Contains predicate on the "request_data" field.
func RequestDataContains(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContains(FieldRequestData, v))
}

// RequestDataHasPrefix applies the HasPrefix predicate on the "request_data" field.
func RequestDataHasPrefix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasPrefix(FieldRequestData, v))
}

// RequestDataHasSuffix applies the HasSuffix predicate on the "request_data" field.
func RequestDataHasSuffix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasSuffix(FieldRequestData, v))
}

// RequestDataIsNil applies the IsNil predicate on the "request_data" field.
func RequestDataIsNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIsNull(FieldRequestData))
}

// RequestDataNotNil applies the NotNil predicate on the "request_data" field.
func RequestDataNotNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotNull(FieldRequestData))
}

// RequestDataEqualFold applies the EqualFold predicate on the "request_data" field.
func RequestDataEqualFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEqualFold(FieldRequestData, v))
}

// RequestDataContainsFold applies the ContainsFold predicate on the "request_data" field.
func RequestDataContainsFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContainsFold(FieldRequestData, v))
}

// ResponseStatusEQ applies the EQ predicate on the "response_status" field.
func ResponseStatusEQ(v int) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldResponseStatus, v))
}

// ResponseStatusNEQ applies the NEQ predicate on the "response_status" field.
func ResponseStatusNEQ(v int) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldResponseStatus, v))
}

// ResponseStatusIn applies the In predicate on the "response_status" field.
func ResponseStatusIn(vs ...int) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldResponseStatus, vs...))
}

// ResponseStatusNotIn applies the NotIn predicate on the "response_status" field.
func ResponseStatusNotIn(vs ...int) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldResponseStatus, vs...))
}

// ResponseStatusGT applies the GT predicate on the "response_status" field.
func ResponseStatusGT(v int) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldResponseStatus, v))
}

// ResponseStatusGTE applies the GTE predicate on the "response_status" field.
func ResponseStatusGTE(v int) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldResponseStatus, v))
}

// ResponseStatusLT applies the LT predicate on the "response_status" field.
func ResponseStatusLT(v int) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldResponseStatus, v))
}

// ResponseStatusLTE applies the LTE predicate on the "response_status" field.
func ResponseStatusLTE(v int) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldResponseStatus, v))
}

// ResponseDataEQ applies the EQ predicate on the "response_data" field.
func ResponseDataEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldResponseData, v))
}

// ResponseDataNEQ applies the NEQ predicate on the "response_data" field.
func ResponseDataNEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldResponseData, v))
}

// ResponseDataIn applies the In predicate on the "response_data" field.
func ResponseDataIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldResponseData, vs...))
}

// ResponseDataNotIn applies the NotIn predicate on the "response_data" field.
func ResponseDataNotIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldResponseData, vs...))
}

// ResponseDataGT applies the GT predicate on the "response_data" field.
func ResponseDataGT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldResponseData, v))
}

// ResponseDataGTE applies the GTE predicate on the "response_data" field.
func ResponseDataGTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldResponseData, v))
}

// ResponseDataLT applies the LT predicate on the "response_data" field.
func ResponseDataLT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldResponseData, v))
}

// ResponseDataLTE applies the LTE predicate on the "response_data" field.
func ResponseDataLTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldResponseData, v))
}

// ResponseDataContains applies the Contains predicate on the "response_data" field.
func ResponseDataContains(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContains(FieldResponseData, v))
}

// ResponseDataHasPrefix applies the HasPrefix predicate on the "response_data" field.
func ResponseDataHasPrefix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasPrefix(FieldResponseData, v))
}

// ResponseDataHasSuffix applies the HasSuffix predicate on the "response_data" field.
func ResponseDataHasSuffix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasSuffix(FieldResponseData, v))
}

// ResponseDataIsNil applies the IsNil predicate on the "response_data" field.
func ResponseDataIsNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIsNull(FieldResponseData))
}

// ResponseDataNotNil applies the NotNil predicate on the "response_data" field.
func ResponseDataNotNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotNull(FieldResponseData))
}

// ResponseDataEqualFold applies the EqualFold predicate on the "response_data" field.
func ResponseDataEqualFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEqualFold(FieldResponseData, v))
}

// ResponseDataContainsFold applies the ContainsFold predicate on the "response_data" field.
func ResponseDataContainsFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContainsFold(FieldResponseData, v))
}

// IPAddressEQ applies the EQ predicate on the "ip_address" field.
func IPAddressEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldIPAddress, v))
}

// IPAddressNEQ applies the NEQ predicate on the "ip_address" field.
func IPAddressNEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldIPAddress, v))
}

// IPAddressIn applies the In predicate on the "ip_address" field.
func IPAddressIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldIPAddress, vs...))
}

// IPAddressNotIn applies the NotIn predicate on the "ip_address" field.
func IPAddressNotIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldIPAddress, vs...))
}

// IPAddressGT applies the GT predicate on the "ip_address" field.
func IPAddressGT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldIPAddress, v))
}

// IPAddressGTE applies the GTE predicate on the "ip_address" field.
func IPAddressGTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldIPAddress, v))
}

// IPAddressLT applies the LT predicate on the "ip_address" field.
func IPAddressLT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldIPAddress, v))
}

// IPAddressLTE applies the LTE predicate on the "ip_address" field.
func IPAddressLTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldIPAddress, v))
}

// IPAddressContains applies the Contains predicate on the "ip_address" field.
func IPAddressContains(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContains(FieldIPAddress, v))
}

// IPAddressHasPrefix applies the HasPrefix predicate on the "ip_address" field.
func IPAddressHasPrefix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasPrefix(FieldIPAddress, v))
}

// IPAddressHasSuffix applies the HasSuffix predicate on the "ip_address" field.
func IPAddressHasSuffix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasSuffix(FieldIPAddress, v))
}

// IPAddressEqualFold applies the EqualFold predicate on the "ip_address" field.
func IPAddressEqualFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEqualFold(FieldIPAddress, v))
}

// IPAddressContainsFold applies the ContainsFold predicate on the "ip_address" field.
func IPAddressContainsFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContainsFold(FieldIPAddress, v))
}

// UserAgentEQ applies the EQ predicate on the "user_agent" field.
func UserAgentEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldUserAgent, v))
}

// UserAgentNEQ applies the NEQ predicate on the "user_agent" field.
func UserAgentNEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldUserAgent, v))
}

// UserAgentIn applies the In predicate on the "user_agent" field.
func UserAgentIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldUserAgent, vs...))
}

// UserAgentNotIn applies the NotIn predicate on the "user_agent" field.
func UserAgentNotIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldUserAgent, vs...))
}

// UserAgentGT applies the GT predicate on the "user_agent" field.
func UserAgentGT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldUserAgent, v))
}

// UserAgentGTE applies the GTE predicate on the "user_agent" field.
func UserAgentGTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldUserAgent, v))
}

// UserAgentLT applies the LT predicate on the "user_agent" field.
func UserAgentLT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldUserAgent, v))
}

// UserAgentLTE applies the LTE predicate on the "user_agent" field.
func UserAgentLTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldUserAgent, v))
}

// UserAgentContains applies the Contains predicate on the "user_agent" field.
func UserAgentContains(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContains(FieldUserAgent, v))
}

// UserAgentHasPrefix applies the HasPrefix predicate on the "user_agent" field.
func UserAgentHasPrefix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasPrefix(FieldUserAgent, v))
}

// UserAgentHasSuffix applies the HasSuffix predicate on the "user_agent" field.
func UserAgentHasSuffix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasSuffix(FieldUserAgent, v))
}

// UserAgentIsNil applies the IsNil predicate on the "user_agent" field.
func UserAgentIsNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIsNull(FieldUserAgent))
}

// UserAgentNotNil applies the NotNil predicate on the "user_agent" field.
func UserAgentNotNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotNull(FieldUserAgent))
}

// UserAgentEqualFold applies the EqualFold predicate on the "user_agent" field.
func UserAgentEqualFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEqualFold(FieldUserAgent, v))
}

// UserAgentContainsFold applies the ContainsFold predicate on the "user_agent" field.
func UserAgentContainsFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContainsFold(FieldUserAgent, v))
}

// DurationMsEQ applies the EQ predicate on the "duration_ms" field.
func DurationMsEQ(v int64) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldDurationMs, v))
}

// DurationMsNEQ applies the NEQ predicate on the "duration_ms" field.
func DurationMsNEQ(v int64) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldDurationMs, v))
}

// DurationMsIn applies the In predicate on the "duration_ms" field.
func DurationMsIn(vs ...int64) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldDurationMs, vs...))
}

// DurationMsNotIn applies the NotIn predicate on the "duration_ms" field.
func DurationMsNotIn(vs ...int64) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldDurationMs, vs...))
}

// DurationMsGT applies the GT predicate on the "duration_ms" field.
func DurationMsGT(v int64) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldDurationMs, v))
}

// DurationMsGTE applies the GTE predicate on the "duration_ms" field.
func DurationMsGTE(v int64) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldDurationMs, v))
}

// DurationMsLT applies the LT predicate on the "duration_ms" field.
func DurationMsLT(v int64) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldDurationMs, v))
}

// DurationMsLTE applies the LTE predicate on the "duration_ms" field.
func DurationMsLTE(v int64) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldDurationMs, v))
}

// ErrorMessageEQ applies the EQ predicate on the "error_message" field.
func ErrorMessageEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEQ(FieldErrorMessage, v))
}

// ErrorMessageNEQ applies the NEQ predicate on the "error_message" field.
func ErrorMessageNEQ(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNEQ(FieldErrorMessage, v))
}

// ErrorMessageIn applies the In predicate on the "error_message" field.
func ErrorMessageIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIn(FieldErrorMessage, vs...))
}

// ErrorMessageNotIn applies the NotIn predicate on the "error_message" field.
func ErrorMessageNotIn(vs ...string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotIn(FieldErrorMessage, vs...))
}

// ErrorMessageGT applies the GT predicate on the "error_message" field.
func ErrorMessageGT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGT(FieldErrorMessage, v))
}

// ErrorMessageGTE applies the GTE predicate on the "error_message" field.
func ErrorMessageGTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldGTE(FieldErrorMessage, v))
}

// ErrorMessageLT applies the LT predicate on the "error_message" field.
func ErrorMessageLT(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLT(FieldErrorMessage, v))
}

// ErrorMessageLTE applies the LTE predicate on the "error_message" field.
func ErrorMessageLTE(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldLTE(FieldErrorMessage, v))
}

// ErrorMessageContains applies the Contains predicate on the "error_message" field.
func ErrorMessageContains(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContains(FieldErrorMessage, v))
}

// ErrorMessageHasPrefix applies the HasPrefix predicate on the "error_message" field.
func ErrorMessageHasPrefix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasPrefix(FieldErrorMessage, v))
}

// ErrorMessageHasSuffix applies the HasSuffix predicate on the "error_message" field.
func ErrorMessageHasSuffix(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldHasSuffix(FieldErrorMessage, v))
}

// ErrorMessageIsNil applies the IsNil predicate on the "error_message" field.
func ErrorMessageIsNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIsNull(FieldErrorMessage))
}

// ErrorMessageNotNil applies the NotNil predicate on the "error_message" field.
func ErrorMessageNotNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotNull(FieldErrorMessage))
}

// ErrorMessageEqualFold applies the EqualFold predicate on the "error_message" field.
func ErrorMessageEqualFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldEqualFold(FieldErrorMessage, v))
}

// ErrorMessageContainsFold applies the ContainsFold predicate on the "error_message" field.
func ErrorMessageContainsFold(v string) predicate.AuditLog {
	return predicate.AuditLog(sql.FieldContainsFold(FieldErrorMessage, v))
}

// MetadataIsNil applies the IsNil predicate on the "metadata" field.
func MetadataIsNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldIsNull(FieldMetadata))
}

// MetadataNotNil applies the NotNil predicate on the "metadata" field.
func MetadataNotNil() predicate.AuditLog {
	return predicate.AuditLog(sql.FieldNotNull(FieldMetadata))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AuditLog) predicate.AuditLog {
	return predicate.AuditLog(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AuditLog) predicate.AuditLog {
	return predicate.AuditLog(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AuditLog) predicate.AuditLog {
	return predicate.AuditLog(sql.NotPredicates(p))
}
